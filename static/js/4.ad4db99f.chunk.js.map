{"version":3,"sources":["components/PlanetDetails/PlanetItemDetails.js","components/SpecieDetails/SpecieItemDetails.js","components/StarshipDetails/StarshipItemDetails.js","components/FilmDetails/FilmDetails.js"],"names":["PlanetItemDetails","id","useState","current","pageSize","pagination","data","useFetch","planet","loading","isFetching","active","href","status","size","text","name","SpecieItemDetails","specie","StarshipItemDetails","starship","FilmDetails","error","message","type","className","title","subTitle","onBack","window","history","back","layout","column","bordered","Item","label","episode_id","director","producer","format","parse","release_date","Date","span","opening_crawl","characters","map","item","match","style","verticalAlign","species","planets","starships","startship"],"mappings":"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","file":"static/js/4.ad4db99f.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { useFetch } from \"../../start-wars\";\nimport { Skeleton, Badge } from \"antd\";\nimport { A } from \"hookrouter\";\n\nconst PlanetItemDetails = ({ id }) => {\n  const [pagination] = useState({\n    current: 1,\n    pageSize: 10,\n  });\n\n  const data = useFetch(`/planets/${id}`, pagination);\n\n  const planet = data.data;\n\n  return (\n    <>\n      <Skeleton loading={data.isFetching} active>\n        <A href={`/planets/${id}`}>\n          <Badge status=\"default\" size=\"small\" text={`${planet.name}`} />\n        </A>\n        <br />\n      </Skeleton>\n    </>\n  );\n};\n\nexport default PlanetItemDetails;\n","import { useState } from \"react\";\nimport { useFetch } from \"../../start-wars\";\nimport { Skeleton, Badge } from \"antd\";\nimport { A } from \"hookrouter\";\n\nconst SpecieItemDetails = ({ id }) => {\n  const [pagination] = useState({\n    current: 1,\n    pageSize: 10,\n  });\n\n  const data = useFetch(`/species/${id}`, pagination);\n\n  const specie = data.data;\n\n  return (\n    <>\n      <Skeleton loading={data.isFetching} active>\n        <A href={`/species/${id}`}>\n          <Badge status=\"default\" size=\"small\" text={`${specie.name}`} />\n        </A>\n        <br />\n      </Skeleton>\n    </>\n  );\n};\n\nexport default SpecieItemDetails;\n","import { useState } from \"react\";\nimport { useFetch } from \"../../start-wars\";\nimport { Skeleton, Badge } from \"antd\";\nimport { A } from \"hookrouter\";\n\nconst StarshipItemDetails = ({ id }) => {\n  const [pagination] = useState({\n    current: 1,\n    pageSize: 10,\n  });\n\n  const data = useFetch(`/starships/${id}`, pagination);\n\n  const starship = data.data;\n\n  return (\n    <>\n      <Skeleton loading={data.isFetching} active>\n        <A href={`/starships/${id}`}>\n          <Badge status=\"default\" size=\"small\" text={`${starship.name}`} />\n        </A>\n        <br />\n      </Skeleton>\n    </>\n  );\n};\n\nexport default StarshipItemDetails;\n","import React, { useState } from \"react\";\nimport { PageHeader, Descriptions, Spin, Alert } from \"antd\";\nimport { parse, format } from 'date-fns'\n\nimport { useFetch } from \"../../start-wars\";\nimport PeopleItemDetails from \"../PeopleDetails/PeopleItemDetails\";\nimport SpecieItemDetails from \"../SpecieDetails/SpecieItemDetails\";\nimport PlanetItemDetails from \"../PlanetDetails/PlanetItemDetails\";\n\nimport \"./FilmDetails.less\";\nimport StarshipItemDetails from \"../StarshipDetails/StarshipItemDetails\";\n\nconst FilmDetails = ({ id }) => {\n  const [pagination] = useState({\n    current: 1,\n    pageSize: 10,\n  });\n\n  const data = useFetch(`/films/${id}`, pagination);\n\n  if (data.isFetching) return <Spin />;\n  if (data.error) return <Alert message=\"Error Text\" type=\"error\" />;\n  return (\n    <>\n      <PageHeader\n        className=\"site-page-header\"\n        title={`${data.data.title}`}\n        subTitle={`Details about the film`}\n        onBack={() => window.history.back()}\n      />\n      <Descriptions layout=\"vertical\" column={4} bordered>\n        <Descriptions.Item label=\"Episode\">\n          {data.data.episode_id}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Director\">\n          {data.data.director}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Producer\">\n          {data.data.producer}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Release Date\">\n          { format(parse(data.data.release_date, 'yyyy-MM-dd', new Date()), \"MMM dd, yyyy\") }\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Opening Crawl\" span=\"4\">\n          {data.data.opening_crawl}\n        </Descriptions.Item>\n\n        <Descriptions.Item label=\"Characters\" span={1}>\n          <>\n          {data.data.characters.map((item) => {\n            const id = item.match(/(\\d+)/gm)[0];\n            return <PeopleItemDetails id={id} key={`character_${id}`}/>;\n          })}\n          </>\n        </Descriptions.Item>\n\n        <Descriptions.Item\n          label=\"Species\"\n          span={1}\n          style={{ verticalAlign: \"text-top\" }}\n        >\n          {data.data.species.map((item) => {\n            const id = item.match(/(\\d+)/gm)[0];\n            return <SpecieItemDetails id={id} key={`specie_${id}`}/>;\n          })}\n        </Descriptions.Item>\n\n        <Descriptions.Item\n          label=\"Planets\"\n          span={1}\n          style={{ verticalAlign: \"text-top\" }}\n        >\n          {data.data.planets.map((planet) => {\n            const id = planet.match(/(\\d+)/gm)[0];\n            return <PlanetItemDetails id={id} key={`planet_${id}`} />;\n          })}\n        </Descriptions.Item>\n\n        <Descriptions.Item\n          label=\"Starships\"\n          span={1}\n          style={{ verticalAlign: \"text-top\" }}\n        >\n          {data.data.starships.map((startship) => {\n            const id = startship.match(/(\\d+)/gm)[0];\n            return <StarshipItemDetails id={id} key={`starship_${id}`} />;\n          })}\n        </Descriptions.Item>\n      </Descriptions>\n    </>\n  );\n};\n\nexport default FilmDetails;\n"],"sourceRoot":""}