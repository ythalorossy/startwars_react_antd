{"version":3,"sources":["components/People/People.js"],"names":["People","columns","title","dataIndex","key","defaultSortOrder","sorter","a","b","name","localeCompare","gender","render","mass","height","fixed","text","record","id","url","match","replaceAll","href","useState","current","pageSize","pagination","setPagination","data","useFetch","isError","message","type","className","subTitle","dataSource","results","total","count","pageSizeOptions","onChange","filters","extra","action","rowKey","loading","spinning","isFetching","size"],"mappings":"yNAkGeA,UA1FA,WACb,IAAMC,EAAU,CACd,CACEC,MAAO,OACPC,UAAW,OACXC,IAAK,OACLC,iBAAkB,SAClBC,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,KAAKC,cAAcF,EAAEC,QAE3C,CACEP,MAAO,SACPC,UAAW,SACXC,IAAK,SACLE,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAAOD,cAAcF,EAAEG,UAE7C,CACET,MAAO,OACPC,UAAW,OACXC,IAAK,OACLQ,OAAQ,SAACC,GAAD,gBAAaA,EAAb,SAEV,CACEX,MAAO,SACPC,UAAW,SACXC,IAAK,SACLQ,OAAQ,SAACE,GAAD,gBAAeA,EAAf,SAEV,CACEZ,MAAO,aACPC,UAAW,aACXC,IAAK,cAEP,CACEF,MAAO,aACPC,UAAW,aACXC,IAAK,cAEP,CACEF,MAAO,SACPE,IAAK,YACLW,MAAO,QACPH,OAAQ,SAACI,EAAMC,GACb,IAAMC,EAAKD,EAAOE,IAAIC,MAAM,WAAW,GAAGC,WAAW,IAAK,IAEpDF,EAAG,kBAAcD,GACvB,OAAO,cAAC,IAAD,CAAGI,KAAMH,EAAT,wBA7CM,EAkDiBI,mBAAS,CAC3CC,QAAS,EACTC,SAAU,KApDO,mBAkDZC,EAlDY,KAkDAC,EAlDA,KAuDbC,EAAOC,YAAS,UAAWH,GAQjC,OAAIE,EAAKE,QAAgB,cAAC,IAAD,CAAOC,QAAQ,aAAaC,KAAK,UAExD,gCACE,cAAC,IAAD,CACEC,UAAU,mBACV/B,MAAM,aACNgC,SAAS,iCAEX,cAAC,IAAD,CACEC,WAAYP,EAAKA,KAAKQ,QACtBnC,QAASA,EACTyB,WAAU,2BACLA,GADK,IAERW,MAAOT,EAAKA,KAAKU,MACjBC,gBAAiB,CAAC,MAEpBC,SAtBN,SAAsBd,EAAYe,EAASnC,EAAQoC,GAC5B,aAAjBA,EAAMC,QACRhB,EAAc,eAAKD,KAqBjBkB,OAAQ,SAAC3B,GAAD,OAAYA,EAAOE,KAC3B0B,QAAS,CACPC,SAAUlB,EAAKmB,WACfC,KAAM","file":"static/js/8.3f220c36.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { PageHeader, Alert, Table } from \"antd\";\nimport { A } from \"hookrouter\";\n\nimport { useFetch } from \"../../start-wars\";\n\nimport \"./People.less\";\n\nconst People = () => {\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\",\n      defaultSortOrder: \"ascend\",\n      sorter: (a, b) => a.name.localeCompare(b.name),\n    },\n    {\n      title: \"Gender\",\n      dataIndex: \"gender\",\n      key: \"gender\",\n      sorter: (a, b) => a.gender.localeCompare(b.gender),\n    },\n    {\n      title: \"Mass\",\n      dataIndex: \"mass\",\n      key: \"mass\",\n      render: (mass) => `${mass} Kg`,\n    },\n    {\n      title: \"Height\",\n      dataIndex: \"height\",\n      key: \"height\",\n      render: (height) => `${height} cm`,\n    },\n    {\n      title: \"Hair Color\",\n      dataIndex: \"hair_color\",\n      key: \"hair_color\",\n    },\n    {\n      title: \"Skin Color\",\n      dataIndex: \"skin_color\",\n      key: \"skin_color\",\n    },\n    {\n      title: \"Action\",\n      key: \"operation\",\n      fixed: \"right\",\n      render: (text, record) => {\n        const id = record.url.match(/(\\d+)/gm)[0].replaceAll(\"/\", \"\");\n\n        const url = `/people/${id}`;\n        return <A href={url}>details</A>;\n      },\n    },\n  ];\n\n  const [pagination, setPagination] = useState({\n    current: 1,\n    pageSize: 10,\n  });\n\n  const data = useFetch(`/people`, pagination);\n\n  function handleChange(pagination, filters, sorter, extra) {\n    if (extra.action === \"paginate\") {\n      setPagination({ ...pagination });\n    }\n  }\n\n  if (data.isError) return <Alert message=\"Error Text\" type=\"error\" />;\n  return (\n    <div>\n      <PageHeader\n        className=\"site-page-header\"\n        title=\"Characters\"\n        subTitle=\"List of Star Wars Characters\"\n      />\n      <Table\n        dataSource={data.data.results}\n        columns={columns}\n        pagination={{\n          ...pagination,\n          total: data.data.count,\n          pageSizeOptions: [10],\n        }}\n        onChange={handleChange}\n        rowKey={(record) => record.url}\n        loading={{\n          spinning: data.isFetching,\n          size: \"large\",\n        }}\n      />\n    </div>\n  );\n};\n\nexport default People;\n"],"sourceRoot":""}