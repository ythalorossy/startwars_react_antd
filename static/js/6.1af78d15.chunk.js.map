{"version":3,"sources":["components/PlanetDetails/PlanetItemDetails.js","components/SpecieDetails/SpecieDetails.js"],"names":["PlanetItemDetails","id","useState","current","pageSize","pagination","data","useFetch","planet","loading","isFetching","active","href","status","size","text","name","SpecieDetails","error","message","type","className","title","subTitle","onBack","window","history","back","layout","column","bordered","Item","label","classification","designation","average_height","average_lifespan","homeworld","split","map","match","language","hair_colors","hc","i","color","eye_colors","ec","span","skin_colors","sc"],"mappings":"kKA2BeA,IAtBW,SAAC,GAAY,IAAVC,EAAS,EAATA,GAC3B,EAAqBC,mBAAS,CAC5BC,QAAS,EACTC,SAAU,KAFLC,EAAP,oBAKMC,EAAOC,YAAS,YAAD,OAAaN,GAAMI,GAElCG,EAASF,EAAKA,KAEpB,OACE,mCACE,eAAC,IAAD,CAAUG,QAASH,EAAKI,WAAYC,QAAM,EAA1C,UACE,cAAC,IAAD,CAAGC,KAAI,mBAAcX,GAArB,SACE,cAAC,IAAD,CAAOY,OAAO,UAAUC,KAAK,QAAQC,KAAI,UAAKP,EAAOQ,UAEvD,8B,+JC2DOC,UAxEO,SAAC,GAAY,IAAVhB,EAAS,EAATA,GACvB,EAAqBC,mBAAS,CAC5BC,QAAS,EACTC,SAAU,KAFLC,EAAP,oBAKMC,EAAOC,YAAS,YAAD,OAAaN,GAAMI,GAExC,OAAIC,EAAKI,WAAmB,cAAC,IAAD,IACxBJ,EAAKY,MAAc,cAAC,IAAD,CAAOC,QAASb,EAAKY,MAAOE,KAAK,UAGtD,qCACE,cAAC,IAAD,CACEC,UAAU,mBACVC,MAAK,UAAKhB,EAAKA,KAAKU,MACpBO,SAAQ,2BACRC,OAAQ,kBAAMC,OAAOC,QAAQC,UAE/B,eAAC,IAAD,CAAcC,OAAO,WAAWC,OAAQ,EAAGC,UAAQ,EAAnD,UACE,cAAC,IAAaC,KAAd,CAAmBC,MAAM,iBAAzB,SACG1B,EAAKA,KAAK2B,iBAEb,cAAC,IAAaF,KAAd,CAAmBC,MAAM,cAAzB,SACG1B,EAAKA,KAAK4B,cAEb,cAAC,IAAaH,KAAd,CAAmBC,MAAM,iBAAzB,SACG1B,EAAKA,KAAK6B,iBAEb,cAAC,IAAaJ,KAAd,CAAmBC,MAAM,mBAAzB,SACG1B,EAAKA,KAAK8B,mBAGb,cAAC,IAAaL,KAAd,CAAmBC,MAAM,aAAzB,SACC1B,EAAKA,KAAK+B,UAAUC,MAAM,MAAMC,KAAI,SAAC/B,GAClC,IAAMP,EAAKO,EAAOgC,MAAM,WAAW,GACnC,OAAO,cAAC,IAAD,CAAmBvC,GAAIA,GAAvB,iBAA0CA,SAGrD,cAAC,IAAa8B,KAAd,CAAmBC,MAAM,WAAzB,SACG1B,EAAKA,KAAKmC,WAEb,cAAC,IAAaV,KAAd,CAAmBC,MAAM,cAAzB,SACG1B,EAAKA,KAAKoC,YAAYJ,MAAM,KAAKC,KAAI,SAACI,EAAIC,GAAL,OACpC,gCACE,cAAC,IAAD,CAAO/B,OAAO,UAAUC,KAAK,QAAQC,KAAI,UAAK4B,GAAME,MAAK,UAAKF,KAC9D,yBAFF,aAAiBC,SAMrB,cAAC,IAAab,KAAd,CAAmBC,MAAM,aAAzB,SACG1B,EAAKA,KAAKwC,WAAWR,MAAM,KAAKC,KAAI,SAACQ,EAAIH,GAAL,OACnC,gCACE,cAAC,IAAD,CAAO/B,OAAO,UAAUC,KAAK,QAAQC,KAAI,UAAKgC,GAAMF,MAAK,UAAKE,KAC9D,yBAFF,aAAgBH,SAOpB,cAAC,IAAab,KAAd,CAAmBC,MAAM,cAAcgB,KAAM,EAA7C,SACG1C,EAAKA,KAAK2C,YAAYX,MAAM,KAAKC,KAAI,SAACW,EAAGN,GAAJ,OACpC,gCACE,cAAC,IAAD,CAAO/B,OAAO,UAAUC,KAAK,QAAQC,KAAI,UAAKmC,KAC9C,yBAFF,aAAgBN","file":"static/js/6.1af78d15.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { useFetch } from \"../../start-wars\";\nimport { Skeleton, Badge } from \"antd\";\nimport { A } from \"hookrouter\";\n\nconst PlanetItemDetails = ({ id }) => {\n  const [pagination] = useState({\n    current: 1,\n    pageSize: 10,\n  });\n\n  const data = useFetch(`/planets/${id}`, pagination);\n\n  const planet = data.data;\n\n  return (\n    <>\n      <Skeleton loading={data.isFetching} active>\n        <A href={`/planets/${id}`}>\n          <Badge status=\"default\" size=\"small\" text={`${planet.name}`} />\n        </A>\n        <br />\n      </Skeleton>\n    </>\n  );\n};\n\nexport default PlanetItemDetails;\n","import React, { useState } from \"react\";\nimport { Spin, Alert, PageHeader, Descriptions, Badge } from \"antd\";\n\nimport { useFetch } from \"../../start-wars\";\n\nimport \"./SpecieDetails.less\";\nimport PlanetItemDetails from \"../PlanetDetails/PlanetItemDetails\";\n\nconst SpecieDetails = ({ id }) => {\n  const [pagination] = useState({\n    current: 1,\n    pageSize: 10,\n  });\n\n  const data = useFetch(`/species/${id}`, pagination);\n\n  if (data.isFetching) return <Spin />;\n  if (data.error) return <Alert message={data.error} type=\"error\" />;\n\n  return (\n    <>\n      <PageHeader\n        className=\"site-page-header\"\n        title={`${data.data.name}`}\n        subTitle={`Details about the Specie`}\n        onBack={() => window.history.back()}\n      />\n      <Descriptions layout=\"vertical\" column={4} bordered>\n        <Descriptions.Item label=\"Classification\">\n          {data.data.classification}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Designation\">\n          {data.data.designation}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Avarage Height\">\n          {data.data.average_height}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Average Lifespan\">\n          {data.data.average_lifespan}\n        </Descriptions.Item>\n\n        <Descriptions.Item label=\"Home World\">\n        {data.data.homeworld.split(/\\s/).map((planet) => {\n            const id = planet.match(/(\\d+)/gm)[0];\n            return <PlanetItemDetails id={id} key={`planet_${id}`} />;\n          })}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Language\">\n          {data.data.language}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Hair Colors\">\n          {data.data.hair_colors.split(\",\").map((hc, i) => (\n            <div  key={`hc_${i}`}>\n              <Badge status=\"default\" size=\"small\" text={`${hc}`} color={`${hc}`}  />\n              <br />\n            </div>\n          ))}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Eye Colors\">\n          {data.data.eye_colors.split(\",\").map((ec, i) => (\n            <div key={`ec_${i}`}>\n              <Badge status=\"default\" size=\"small\" text={`${ec}`} color={`${ec}`}/>\n              <br />\n            </div>\n          ))}\n        </Descriptions.Item>\n\n        <Descriptions.Item label=\"Skin Colors\" span={1}>\n          {data.data.skin_colors.split(\",\").map((sc,i) => (\n            <div key={`sc_${i}`}>\n              <Badge status=\"default\" size=\"small\" text={`${sc}`} />\n              <br />\n            </div>\n          ))}\n        </Descriptions.Item>\n      </Descriptions>\n    </>\n  );\n};\n\nexport default SpecieDetails;\n"],"sourceRoot":""}