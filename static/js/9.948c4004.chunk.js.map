{"version":3,"sources":["components/PlanetDetails/PlanetDetails.js"],"names":["PlanetDetails","id","useState","current","pageSize","pagination","data","useFetch","isFetching","error","message","type","planet","console","log","terrain","split","map","t","text","className","title","name","subTitle","onBack","window","history","back","layout","column","bordered","Item","label","diameter","value","displayType","suffix","rotation_period","orbital_period","gravity","population","defaultChecked","thousandSeparator","climate","status","size","surface_water","span","residents","item","match"],"mappings":"4OAuEeA,UA/DO,SAAC,GAAY,IAAVC,EAAS,EAATA,GACvB,EAAqBC,mBAAS,CAC5BC,QAAS,EACTC,SAAU,KAFLC,EAAP,oBAKMC,EAAOC,YAAS,YAAD,OAAaN,GAAMI,GAExC,GAAIC,EAAKE,WAAY,OAAO,cAAC,IAAD,IAC5B,GAAIF,EAAKG,MAAO,OAAO,cAAC,IAAD,CAAOC,QAAQ,aAAaC,KAAK,UAExD,IAAMC,EAASN,EAAKA,KAIpB,OAFAO,QAAQC,IAAIF,EAAOG,QAAQC,MAAM,KAAKC,KAAI,SAACC,GAAD,OAAO,cAAC,IAAD,CAAOC,KAAI,UAAKD,SAG/D,qCACE,cAAC,IAAD,CACEE,UAAU,mBACVC,MAAK,UAAKT,EAAOU,MACjBC,SAAQ,2BACRC,OAAQ,kBAAMC,OAAOC,QAAQC,UAE/B,eAAC,IAAD,CAAcC,OAAO,WAAWC,OAAQ,EAAGC,UAAQ,EAAnD,UACE,cAAC,IAAaC,KAAd,CAAmBC,MAAM,WAAzB,SACuB,YAApBpB,EAAOqB,SAAyBrB,EAAOqB,SAAW,cAAC,IAAD,CAAcC,MAAOtB,EAAOqB,SAAUE,YAAY,OAAOC,OAAO,SAErH,cAAC,IAAaL,KAAd,CAAmBC,MAAM,kBAAzB,mBACMpB,EAAOyB,gBADb,YAGA,cAAC,IAAaN,KAAd,CAAmBC,MAAM,iBAAzB,mBACMpB,EAAO0B,eADb,WAGA,cAAC,IAAaP,KAAd,CAAmBC,MAAM,UAAzB,SAAoCpB,EAAO2B,UAC3C,cAAC,IAAaR,KAAd,CAAmBC,MAAM,aAAzB,SACuB,YAAtBpB,EAAO4B,WACJ5B,EAAO4B,WACP,cAAC,IAAD,CAAcN,MAAOtB,EAAO4B,WAAYC,gBAAgB,EAAMN,YAAY,OAAOO,mBAAmB,MAGxG,cAAC,IAAaX,KAAd,CAAmBC,MAAM,UAAzB,SAAoCpB,EAAO+B,UAC3C,cAAC,IAAaZ,KAAd,CAAmBC,MAAM,UAAzB,SACGpB,EAAOG,QAAQC,MAAM,KAAKC,KAAI,SAACC,GAAD,OAC7B,qCACE,cAAC,IAAD,CAAO0B,OAAO,UAAUC,KAAK,QAAQ1B,KAAI,UAAKD,KAC9C,+BAIN,cAAC,IAAaa,KAAd,CAAmBC,MAAM,gBAAzB,mBACMpB,EAAOkC,cADb,OAGA,cAAC,IAAaf,KAAd,CAAmBC,MAAM,YAAYe,KAAM,EAA3C,SACGnC,EAAOoC,UAAU/B,KAAI,SAACgC,GACrB,IAAMhD,EAAKgD,EAAKC,MAAM,WAAW,GACjC,OAAO,cAAC,IAAD,CAAmBjD,GAAIA","file":"static/js/9.948c4004.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { PageHeader, Descriptions, Spin, Alert, Badge } from \"antd\";\nimport NumberFormat from 'react-number-format';\nimport { useFetch } from \"../../start-wars\";\nimport PeopleItemDetails from \"../PeopleDetails/PeopleItemDetails\";\n\nimport \"./PlanetDetails.less\";\n\nconst PlanetDetails = ({ id }) => {\n  const [pagination] = useState({\n    current: 1,\n    pageSize: 10,\n  });\n\n  const data = useFetch(`/planets/${id}`, pagination);\n\n  if (data.isFetching) return <Spin />;\n  if (data.error) return <Alert message=\"Error Text\" type=\"error\" />;\n\n  const planet = data.data;\n\n  console.log(planet.terrain.split(\",\").map((t) => <Badge text={`${t}`} />));\n\n  return (\n    <>\n      <PageHeader\n        className=\"site-page-header\"\n        title={`${planet.name}`}\n        subTitle={`Details about the Planet`}\n        onBack={() => window.history.back()}\n      />\n      <Descriptions layout=\"vertical\" column={4} bordered>\n        <Descriptions.Item label=\"Diameter\">\n          {planet.diameter === 'unknown' ? planet.diameter : <NumberFormat value={planet.diameter} displayType=\"text\" suffix=\"Km\"/>}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Rotation Period\">\n          {`${planet.rotation_period} hours`}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Orbital Period\">\n          {`${planet.orbital_period} days`}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Gravity\">{planet.gravity}</Descriptions.Item>\n        <Descriptions.Item label=\"Population\">\n        {planet.population === 'unknown'\n          ? planet.population\n          : <NumberFormat value={planet.population} defaultChecked={true} displayType=\"text\" thousandSeparator={true} />\n        }\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Climate\">{planet.climate}</Descriptions.Item>\n        <Descriptions.Item label=\"Terrain\">\n          {planet.terrain.split(\",\").map((t) => (\n            <>\n              <Badge status=\"default\" size=\"small\" text={`${t}`} />\n              <br />\n            </>\n          ))}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Surface Water\">\n          {`${planet.surface_water}%`}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Residents\" span={1}>\n          {planet.residents.map((item) => {\n            const id = item.match(/(\\d+)/gm)[0];\n            return <PeopleItemDetails id={id} />;\n          })}\n        </Descriptions.Item>\n      </Descriptions>\n    </>\n  );\n};\n\nexport default PlanetDetails;\n"],"sourceRoot":""}