{"version":3,"sources":["components/Planets/Planets.js"],"names":["Planets","useState","current","pageSize","pagination","setPagination","data","useFetch","columns","title","dataIndex","key","sorter","compare","a","b","name","defaultSortOrder","diameter","localeCompare","render","value","displayType","suffix","population","defaultChecked","thousandSeparator","surface_water","fixed","text","record","id","url","match","replaceAll","href","isError","message","type","className","subTitle","dataSource","results","total","count","pageSizeOptions","onChange","filters","extra","action","rowKey","loading","spinning","isFetching","size"],"mappings":"mMAgIeA,UAzHC,WACd,MAAoCC,mBAAS,CAC3CC,QAAS,EACTC,SAAU,KAFZ,mBAAOC,EAAP,KAAmBC,EAAnB,KAKMC,EAAOC,YAAS,WAAYH,GAQlC,IAAMI,EAAU,CACd,CACEC,MAAO,OACPC,UAAW,OACXC,IAAK,OACLC,OAAQ,CACNC,QAAS,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,KAAOD,EAAEC,OAEhCC,iBAAkB,UAEpB,CACER,MAAO,WACPC,UAAW,WACXC,IAAK,WACLC,OAAQ,SAACE,EAAGC,GAAJ,OAAUD,EAAEI,SAASC,cAAcJ,EAAEG,WAC7CE,OAAQ,SAACF,GAAD,MACO,YAAbA,EACEA,EAEA,cAAC,IAAD,CAAcG,MAAOH,EAAUI,YAAY,OAAOC,OAAO,SAG/D,CACEd,MAAO,aACPC,UAAW,aACXC,IAAK,aACLC,OAAQ,SAACE,EAAGC,GAAJ,OAAUD,EAAEI,SAASC,cAAcJ,EAAEG,WAC7CE,OAAQ,SAACI,GAAD,MACS,YAAfA,EACEA,EAEA,cAAC,IAAD,CACEH,MAAOG,EACPC,gBAAgB,EAChBH,YAAY,OACZI,mBAAmB,MAI3B,CACEjB,MAAO,UACPC,UAAW,UACXC,IAAK,WAEP,CACEF,MAAO,UACPC,UAAW,UACXC,IAAK,WAEP,CACEF,MAAO,gBACPC,UAAW,gBACXC,IAAK,gBACLS,OAAQ,SAACO,GAAD,MACY,YAAlBA,EACEA,EAEA,cAAC,IAAD,CACEN,MAAOM,EACPF,gBAAgB,EAChBH,YAAY,OACZI,mBAAmB,EACnBH,OAAO,QAIf,CACEd,MAAO,SACPE,IAAK,YACLiB,MAAO,QACPR,OAAQ,SAACS,EAAMC,GACb,IAAMC,EAAKD,EAAOE,IAAIC,MAAM,WAAW,GAAGC,WAAW,IAAK,IACpDF,EAAG,mBAAeD,GACxB,OAAO,cAAC,IAAD,CAAGI,KAAMH,EAAT,wBAKb,OAAI1B,EAAK8B,QAAgB,cAAC,IAAD,CAAOC,QAAQ,aAAaC,KAAK,UAGxD,gCACE,cAAC,IAAD,CACEC,UAAU,mBACV9B,MAAM,UACN+B,SAAS,8BAGX,cAAC,IAAD,CACEC,WAAYnC,EAAKA,KAAKoC,QACtBlC,QAASA,EACTJ,WAAU,2BACLA,GADK,IAERuC,MAAOrC,EAAKA,KAAKsC,MACjBC,gBAAiB,CAAC,MAEpBC,SAtGN,SAAsB1C,EAAY2C,EAASnC,EAAQoC,GAC5B,aAAjBA,EAAMC,QACR5C,EAAc,eAAKD,KAqGjB8C,OAAQ,SAACpB,GAAD,OAAYA,EAAOE,KAC3BmB,QAAS,CACPC,SAAU9C,EAAK+C,WACfC,KAAM","file":"static/js/12.2919ff4e.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { PageHeader, Alert, Table } from \"antd\";\nimport { A } from \"hookrouter\";\n\nimport { useFetch } from \"../../start-wars\";\nimport NumberFormat from \"react-number-format\";\n\nconst Planets = () => {\n  const [pagination, setPagination] = useState({\n    current: 1,\n    pageSize: 10,\n  });\n\n  const data = useFetch(`/planets`, pagination);\n\n  function handleChange(pagination, filters, sorter, extra) {\n    if (extra.action === \"paginate\") {\n      setPagination({ ...pagination });\n    }\n  }\n\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\",\n      sorter: {\n        compare: (a, b) => a.name - b.name,\n      },\n      defaultSortOrder: \"ascend\",\n    },\n    {\n      title: \"Diameter\",\n      dataIndex: \"diameter\",\n      key: \"diameter\",\n      sorter: (a, b) => a.diameter.localeCompare(b.diameter),\n      render: (diameter) =>\n        diameter === \"unknown\" ? (\n          diameter\n        ) : (\n          <NumberFormat value={diameter} displayType=\"text\" suffix=\"Km\" />\n        ),\n    },\n    {\n      title: \"Population\",\n      dataIndex: \"population\",\n      key: \"population\",\n      sorter: (a, b) => a.diameter.localeCompare(b.diameter),\n      render: (population) =>\n        population === \"unknown\" ? (\n          population\n        ) : (\n          <NumberFormat\n            value={population}\n            defaultChecked={true}\n            displayType=\"text\"\n            thousandSeparator={true}\n          />\n        ),\n    },\n    {\n      title: \"Terrain\",\n      dataIndex: \"terrain\",\n      key: \"terrain\",\n    },\n    {\n      title: \"Climate\",\n      dataIndex: \"climate\",\n      key: \"climate\",\n    },\n    {\n      title: \"Surface Water\",\n      dataIndex: \"surface_water\",\n      key: \"surface_water\",\n      render: (surface_water) =>\n        surface_water === \"unknown\" ? (\n          surface_water\n        ) : (\n          <NumberFormat\n            value={surface_water}\n            defaultChecked={true}\n            displayType=\"text\"\n            thousandSeparator={true}\n            suffix=\"%\"\n          />\n        ),\n    },\n    {\n      title: \"Action\",\n      key: \"operation\",\n      fixed: \"right\",\n      render: (text, record) => {\n        const id = record.url.match(/(\\d+)/gm)[0].replaceAll(\"/\", \"\");\n        const url = `/planets/${id}`;\n        return <A href={url}>details</A>;\n      },\n    },\n  ];\n\n  if (data.isError) return <Alert message=\"Error Text\" type=\"error\" />;\n\n  return (\n    <div>\n      <PageHeader\n        className=\"site-page-header\"\n        title=\"Planets\"\n        subTitle=\"List of Star Wars planets\"\n      />\n\n      <Table\n        dataSource={data.data.results}\n        columns={columns}\n        pagination={{\n          ...pagination,\n          total: data.data.count,\n          pageSizeOptions: [10],\n        }}\n        onChange={handleChange}\n        rowKey={(record) => record.url}\n        loading={{\n          spinning: data.isFetching,\n          size: \"large\",\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Planets;\n"],"sourceRoot":""}