{"version":3,"sources":["components/StarshipDetails/StarshipDetails.js"],"names":["StarshipDetails","id","useState","current","pageSize","pagination","data","useFetch","isFetching","error","message","type","starship","className","title","name","subTitle","onBack","window","history","back","layout","column","bordered","Item","label","model","starship_class","manufacturer","cost_in_credits","length","value","displayType","thousandSeparator","suffix","crew","passengers","max_atmosphering_speed","hyperdrive_rating","MGLT","cargo_capacity","consumables","span","pilots","map","item","match"],"mappings":"oOAwFeA,UA/ES,SAAC,GAAY,IAAVC,EAAS,EAATA,GAAS,EAEbC,mBAAS,CAC5BC,QAAS,EACTC,SAAU,KAFLC,EAF2B,oBAO5BC,EAAOC,YAAS,cAAD,OAAeN,GAAMI,GAE1C,GAAIC,EAAKE,WAAY,OAAO,cAAC,IAAD,IAC5B,GAAIF,EAAKG,MAAO,OAAO,cAAC,IAAD,CAAOC,QAASJ,EAAKG,MAAOE,KAAK,UAExD,IAAMC,EAAWN,EAAKA,KAEtB,OACE,qCACE,cAAC,IAAD,CACEO,UAAU,mBACVC,MAAK,UAAKF,EAASG,MACnBC,SAAQ,6BACRC,OAAQ,kBAAMC,OAAOC,QAAQC,UAE/B,eAAC,IAAD,CAAcC,OAAO,WAAWC,OAAQ,EAAGC,UAAQ,EAAnD,UACE,cAAC,IAAaC,KAAd,CAAmBC,MAAM,QAAzB,SACGb,EAASc,QAEZ,cAAC,IAAaF,KAAd,CAAmBC,MAAM,QAAzB,SACGb,EAASe,iBAEZ,cAAC,IAAaH,KAAd,CAAmBC,MAAM,eAAzB,SACGb,EAASgB,eAEZ,cAAC,IAAaJ,KAAd,CAAmBC,MAAM,kBAAzB,SACGb,EAASiB,kBAGZ,cAAC,IAAaL,KAAd,CAAmBC,MAAM,SAAzB,SACqB,YAApBb,EAASkB,OACNlB,EAASkB,OACT,cAAC,IAAD,CAAcC,MAAOnB,EAASkB,OAAQE,YAAY,OAAOC,mBAAmB,EAAMC,OAAO,QAI7F,cAAC,IAAaV,KAAd,CAAmBC,MAAM,OAAzB,SACGb,EAASuB,OAEZ,cAAC,IAAaX,KAAd,CAAmBC,MAAM,aAAzB,SACGb,EAASwB,aAEZ,cAAC,IAAaZ,KAAd,CAAmBC,MAAM,yBAAzB,SACGb,EAASyB,yBAEZ,cAAC,IAAab,KAAd,CAAmBC,MAAM,oBAAzB,SACGb,EAAS0B,oBAEZ,cAAC,IAAad,KAAd,CAAmBC,MAAM,OAAzB,SACGb,EAAS2B,OAEZ,cAAC,IAAaf,KAAd,CAAmBC,MAAM,iBAAzB,SAC6B,YAA5Bb,EAAS4B,eACN5B,EAAS4B,eACT,cAAC,IAAD,CAAcT,MAAOnB,EAAS4B,eAAgBR,YAAY,OAAOC,mBAAmB,EAAMC,OAAO,SAGrG,cAAC,IAAaV,KAAd,CAAmBC,MAAM,cAAzB,SACGb,EAAS6B,cAEZ,cAAC,IAAajB,KAAd,CAAmBC,MAAM,SAASiB,KAAM,EAAxC,SACG9B,EAAS+B,OAAOC,KAAI,SAACC,GACpB,IAAM5C,EAAK4C,EAAKC,MAAM,WAAW,GACjC,OAAO,cAAC,IAAD,CAAmB7C,GAAIA,GAAvB,iBAA0CA","file":"static/js/11.d92185fd.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Spin, Alert, PageHeader, Descriptions } from \"antd\";\n\nimport { useFetch } from \"../../start-wars\";\n\nimport \"./StarshipDetails.less\";\nimport PeopleItemDetails from \"../PeopleDetails/PeopleItemDetails\";\nimport NumberFormat from \"react-number-format\";\n\nconst StarshipDetails = ({ id }) => {\n\n  const [pagination] = useState({\n    current: 1,\n    pageSize: 10,\n  });\n\n  const data = useFetch(`/starships/${id}`, pagination);\n\n  if (data.isFetching) return <Spin />;\n  if (data.error) return <Alert message={data.error} type=\"error\" />;\n\n  const starship = data.data;\n\n  return (\n    <>\n      <PageHeader\n        className=\"site-page-header\"\n        title={`${starship.name}`}\n        subTitle={`Details about the starship`}\n        onBack={() => window.history.back()}\n      />\n      <Descriptions layout=\"vertical\" column={4} bordered>\n        <Descriptions.Item label=\"Model\">\n          {starship.model}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Class\">\n          {starship.starship_class}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Manufacturer\">\n          {starship.manufacturer}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Cost in Credits\">\n          {starship.cost_in_credits}\n        </Descriptions.Item>\n\n        <Descriptions.Item label=\"Length\">\n        {starship.length === 'unknown'\n          ? starship.length\n          : <NumberFormat value={starship.length} displayType=\"text\" thousandSeparator={true} suffix=\"m\"/>\n        }\n          \n        </Descriptions.Item>\n        <Descriptions.Item label=\"Crew\">\n          {starship.crew}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Passengers\">\n          {starship.passengers}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Max atmosphering speed\">\n          {starship.max_atmosphering_speed}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Hyperdrive Rating\">\n          {starship.hyperdrive_rating}\n        </Descriptions.Item>  \n        <Descriptions.Item label=\"MGLT\">\n          {starship.MGLT}\n        </Descriptions.Item>  \n        <Descriptions.Item label=\"Cargo Capacity\">\n        {starship.cargo_capacity === 'unknown'\n          ? starship.cargo_capacity\n          : <NumberFormat value={starship.cargo_capacity} displayType=\"text\" thousandSeparator={true} suffix=\"Kg\"/>\n        }\n        </Descriptions.Item>  \n        <Descriptions.Item label=\"Consumables\" >\n          {starship.consumables}\n        </Descriptions.Item>  \n        <Descriptions.Item label=\"Pilots\" span={1}>\n          {starship.pilots.map((item) => {\n            const id = item.match(/(\\d+)/gm)[0];\n            return <PeopleItemDetails id={id} key={`people_${id}`} />;\n          })   }\n        </Descriptions.Item>        \n\n      </Descriptions>\n    </>\n  );\n};\n\nexport default StarshipDetails;\n"],"sourceRoot":""}